---
- name: configure IIS
  hosts: all
  gather_facts: no

  tasks:
    - name: enable features
      ansible.windows.win_feature:
        name: "{{ win_features }}"
        state: present
        include_sub_features: yes
        include_management_tools: yes
      register: win_output

    - name: reboot server if required
      ansible.windows.win_reboot:
      when: win_output.reboot_required

    - name: Create the application pool(s)
      community.windows.win_iis_webapppool:
        name: "{{ item.key }}"
        state: "{{ item.value.state }}"
        attributes:
          managedPipelineMode: "{{ item.value.pipeline_mode }}"
          managedRuntimeVersion: "{{ item.value.runtime_version }}"
          processModel.maxProcesses: "{{ item.value.max_processes }}"
          processModel.identityType: "{{ item.value.identity_type }}"
          processModel.userName: '{{ item.value.username }}'
          processModel.password: '{{ item.value.password }}'
      loop: "{{ app_pools | dict2items }}"

    - name: Ensure directories for apps are present
      ansible.windows.win_file:
        path: '{{ dir_path }}{{item.value.pool}}\{{ item.key }}'
        state: directory
      loop: "{{ dictionary_apps | dict2items }}"

    - name: Ensure directories for virtual directories are present
      ansible.windows.win_file:
        path: '{{ dir_path }}{{ item.value.pool }}\{{ item.key }}'
        state: "{{ item.value.dir_state }}"
      loop: "{{ virt_dirs | dict2items }}"

    - name: Ensure virtual directories are present
      community.windows.win_iis_virtualdirectory:
        name: '{{ item.key }}'
        site: "{{ iis_site }}"
        state: "{{ item.value.state }}"
        physical_path: '{{ dir_path }}{{ item.value.pool }}\{{ item.key }}'
      loop: "{{ virt_dirs | dict2items }}"

    - name: configure virtual directory physical path credentials
      poc.vdir.vdir_credentials:
        name: "{{ item.key }}"
        site: "{{ iis_site }}"
        username: "{{ item.value.username }}"
        password: "{{ item.value.password }}"
      loop: "{{ virt_dirs | dict2items }}"
      tags: test

    - name: delete vdir
      poc.iis.remove_vdir:
        name: "{{ item.key }}"
        site: "{{ iis_site }}"
        application: "{{ item.key }}"
      loop: "{{ virt_dirs | dict2items }}"
      when: item.value.state == 'absent'

    - name: Configure webapplication on IIS (specific_user)
      community.windows.win_iis_webapplication:
        name: "{{ item.key }}"
        site: "{{ iis_site }}"
        state: "{{ item.value.state }}"
        username: "{{ iis_username }}"
        password: "{{ iis_password }}"
        physical_path: '{{ dir_path }}{{ item.value.pool }}\{{ item.key }}'
        connect_as: "{{ connect_as | default('pass_through')}}"
        application_pool: "{{ item.value.pool }}"
      loop: "{{ dictionary_apps | dict2items }}"

    # - name: template website
    #   include_tasks: tasks/{{ item.value.state }}.yaml
    #   loop: "{{ dictionary_apps | dict2items}}"

    # - name: win shell
    #   ansible.windows.win_command: "{{ cli_command }}"
    #   when: cli_command is defined

    # - name: run script
    #   ansible.windows.win_shell: "{{ shell_command }}"
    #   when: shell_command is defined